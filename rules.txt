Descrição:
Implemente, em uma linguagem de programação a sua escolha, um simulador de gerência de sistemas de arquivos.

Admita o seguinte:

 O tamanho do disco é fixo e, para fins da execução, deve ser de 2048 bytes;
O tamanho dos blocos lógicos são de 8 bytes. Cada arquivo deve ocupar uma quantidade inteira de blocos, mesmo que não use todo seu espaço.
A alocação dos arquivos deve ser sequencial, de modo que o arquivo será alocado no 1º bloco livre do espaço contíguo suficiente para que ele seja alocado.
O programa deve iniciar com o disco completamente vazio e oferecer ao usuário as seguintes opções:

Criar um arquivo: deverá ser perguntado o nome do arquivo (que deve ser único) e o tamanho em bytes que ele ocupa. A partir dessas informações o sistema deve marcar como ocupados a quantidade de blocos suficiente para armazená-lo.
Remover um arquivo: deverá ser perguntado o nome dele e então o seu registro no sistema deve ser apagado e o espaço que ele ocupava deverá ser marcado como livre;
Exibir informações de arquivo: deverá ser perguntado o nome do arquivo, e então o programa deve exibir o seu tamanho e os blocos iniciais/finais ocupados por ele;
Desfragmentar: O sistema deve atualizar as entradas das informações dos arquivos de modo que não haja espaços em branco entre os arquivos.
Algumas situações merecem atenção, como:

Não permitir a criação de arquivos com nomes iguais;
Verificar se existe espaço em branco contíguo suficiente para armazenar o arquivo;
Não apagar arquivo que não existe;
Manter os tamanhos originais dos arquivos quando desfragmentar o disco.
O trabalho será em grupo, o mesmo que apresentou o seminário.

Valor: 3,5.

 

Pode ser dado 1,0 extra, sendo necessário cumprir o seguinte adicionalmente:

Ao invés de perguntar apenas o tamanho do arquivo, deve-se ler um conjunto de caracteres que serão os dados dos arquivos. Esse conteúdo, deverá ser armazenado em um vetor contínuo que simula o disco, de acordo com os blocos. Em caso de espaço em branco no bloco ou remoção de arquivo, o conteúdo no vetor deve permanecer o mesmo. Em caso de desfragmentação, o conteúdo deve ser movido no vetor de acordo com a organização dos blocos;
Ao final da execução, o programa deve armazenar o conteúdo do sistema de arquivos, bem como o vetor com os conteúdos. Na próxima execução esse conteúdo deve ser carregado ao invés de iniciar novamente do zero.

///////////////////////////////

Description:
Implement, in a programming language of your choice, a file system management simulator.

Assume the following:

The disk size is fixed and, for the purpose of execution, it should be 2048 bytes;
The size of logical blocks is 8 bytes. Each file must occupy a whole number of blocks, even if it doesn't use all of its space.
The file allocation should be sequential, so the file will be allocated in the first free block of contiguous space large enough to accommodate it.
The program should start with an empty disk and offer the user the following options:

Create a file: The user should be asked for the file name (which must be unique) and its size in bytes. Based on this information, the system should mark as occupied the number of blocks sufficient to store it.
Remove a file: The user should be asked for its name, and then its record in the system should be deleted, and the space it occupied should be marked as free.
Display file information: The user should be asked for the file name, and then the program should display its size and the initial/final blocks occupied by it.
Defragment: The system should update the file information entries so that there are no blank spaces between the files.
Some situations deserve attention, such as:

Not allowing the creation of files with the same names;
Checking if there is enough contiguous free space to store the file;
Not deleting a file that doesn't exist;
Maintaining the original file sizes when defragmenting the disk.
The work will be done in a group, the same group that presented the seminar.

Value: 3.5.

An extra 1.0 can be given, provided the following is also fulfilled:

Instead of asking only for the file size, a set of characters that will be the file data should be read. This content should be stored in a continuous array that simulates the disk, according to the blocks. In case of blank space in the block or file deletion, the content in the array should remain the same. In case of defragmentation, the content should be moved in the array according to the block organization;
At the end of the execution, the program should store the content of the file system, as well as the array with the contents. In the next execution, this content should be loaded instead of starting from scratch.
